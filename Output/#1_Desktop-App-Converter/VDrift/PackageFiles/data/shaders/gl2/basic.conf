; SHADERS

[shader]
name = simple
fragment = simple.frag
vertex = simple.vert

[shader]
name = simple_premult
fragment = simple.frag
vertex = simple.vert
defines = _PREMULTIPLY_ALPHA_

[shader]
name = simple_alphatest
fragment = simple.frag
vertex = simple.vert
defines = _ALPHATEST_

[shader]
name = simple_lighting_alphatest
fragment = simple.frag
vertex = simple.vert
defines = _LIGHTING_ _ALPHATEST_

[shader]
name = simple_lighting_carpaint
fragment = simple.frag
vertex = simple.vert
defines = _LIGHTING_ _CARPAINT_

[shader]
name = simple_lighting_premult
fragment = simple.frag
vertex = simple.vert
defines = _LIGHTING_ _PREMULTIPLY_ALPHA_

[shader]
name = distancefield
fragment = distancefield.frag
vertex = simple.vert


; DRAWING PASSES

;[pass]
;light = sun
;camera = default
;cull = true
;clear_color = false
;clear_depth = false
;write_color = true
;write_alpha = true
;write_depth = postprocess ? false : true
;depthtest = postprocess ? disabled : lequal
;blendmode = disabled

; skyboxes

[pass]
camera = skybox
draw = skybox_noblend
output = framebuffer
shader = simple
cull = false
clear_depth = true
write_depth = false
depthtest = disabled
blendmode = disabled

[pass]
camera = skybox
draw = skybox_blend
output = framebuffer
shader = simple_premult
cull = false
write_depth = false
depthtest = disabled
blendmode = alphablend_premultiplied


; opaque geometry

[pass]
draw = normal_noblend
output = framebuffer
shader = simple_lighting_alphatest
blendmode = disabled

[pass]
draw = car_noblend
output = framebuffer
shader = simple_lighting_carpaint
blendmode = disabled

[pass]
draw = normal_noblend_nolighting debug_lines
output = framebuffer
shader = simple_alphatest
blendmode = disabled


; additive effects

[pass]
draw = lights_emissive
output = framebuffer
shader = simple
depthtest = lequal
write_depth = false
blendmode = add


; transparent geometry

[pass]
draw = normal_blend
output = framebuffer
shader = simple_lighting_premult
write_depth = false
blendmode = alphablend_premultiplied

; particles

[pass]
draw = particle
output = framebuffer
shader = simple
write_depth = false
blendmode = add
cull = false

; ui elements

[pass]
camera = 2d
draw = twodim
output = framebuffer
shader = simple_premult
cull = false
blendmode = alphablend_premultiplied
depthtest = disabled
write_depth = false

[pass]
camera = 2d
draw = text
output = framebuffer
shader = distancefield
cull = false
blendmode = alphablend
depthtest = disabled
write_depth = false
